{{- if and (not $.Values.statefulset.enabled) $.Values.bluegreen.enabled -}}
{{- if $.Values.keda.enabled }}
{{- range $v, $tag := $.Values.bluegreen.imageTags }}
{{- $fullName := include "docker-template.fullname" $ -}}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ $fullName }}-{{ $tag }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $fullName }}-{{ $tag }}
  pollingInterval: {{ $.Values.keda.pollingInterval }}
  cooldownPeriod: {{ $.Values.keda.cooldownPeriod }}
  {{- if eq $tag $.Values.bluegreen.activeImageTag }}
  minReplicaCount: {{ $.Values.keda.minReplicaCount }}
  maxReplicaCount: {{ $.Values.keda.maxReplicaCount }}
  {{- else }}
  {{- $kedaHpaData := dict "name" $fullName "tag" $.Values.bluegreen.activeImageTag }}
  {{- $kedaHpa := include "docker-template.kedaHpa" $kedaHpaData }}
  minReplicaCount: {{ (lookup "autoscaling/v2" "HorizontalPodAutoscaler" $.Release.Namespace $kedaHpa).status.currentReplicas }}
  maxReplicaCount: {{ (lookup "autoscaling/v2" "HorizontalPodAutoscaler" $.Release.Namespace $kedaHpa).status.currentReplicas }}
  {{- end }}
  fallback:
    failureThreshold: {{ $.Values.keda.fallback.failureThreshold }}
    replicas: {{ $.Values.keda.fallback.failureReplicas }}
  advanced:
    restoreToOriginalReplicaCount: false
    horizontalPodAutoscalerConfig:
      behavior:
        scaleUp:
          stabilizationWindowSeconds: {{ $.Values.keda.hpa.scaleUp.stabilizationWindowSeconds }}
          policies:
          - type: {{ $.Values.keda.hpa.scaleUp.policy.type }}
            value: {{ $.Values.keda.hpa.scaleUp.policy.value }}
            periodSeconds: {{ $.Values.keda.hpa.scaleUp.policy.periodSeconds }}
        scaleDown:
          stabilizationWindowSeconds: {{ $.Values.keda.hpa.scaleDown.stabilizationWindowSeconds }}
          policies:
          - type: {{ $.Values.keda.hpa.scaleDown.policy.type }}
            value: {{ $.Values.keda.hpa.scaleDown.policy.value }}
            periodSeconds: {{ $.Values.keda.hpa.scaleDown.policy.periodSeconds }}
  {{- if $.Values.keda.trigger }}
  triggers:
    - type: prometheus
      metricType: {{ $.Values.keda.trigger.metricType }}
      metadata:
        serverAddress: http://prometheus-server.monitoring.svc.cluster.local:80
        metricName: {{ $.Values.keda.trigger.metricName }}
        query: {{ $.Values.keda.trigger.metricQuery }}
        threshold: '{{ $.Values.keda.trigger.metricThreshold }}'
  {{- end }}
  {{- if $.Values.keda.triggers }}
  triggers:
  {{- toYaml $.Values.keda.triggers | nindent 4 }}
  {{- end }}
{{- if not (eq $v (sub (len $.Values.bluegreen.imageTags) 1) ) }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}