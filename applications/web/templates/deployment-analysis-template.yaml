{{- $isBlueGreen := and .Values.deploymentStrategy (eq .Values.deploymentStrategy.kind "blueGreen") -}}
{{- if $isBlueGreen }}
kind: AnalysisTemplate
apiVersion: argoproj.io/v1alpha1
metadata:
  name: {{ include "docker-template.fullname" . }}-bluegreen
  labels:
    porter.run/app-name: "{{ .Release.Name }}"
spec:
  metrics:
  - name: {{ include "docker-template.fullname" . | trunc 22 | trimSuffix "-" }}
    count: 1
    failureLimit: 0
    provider:
      job:
        spec:
          template:
            metadata:
              labels:
                porter.run/app-name: {{ .Release.Name }}
                porter.run/service-name: {{ include "docker-template.fullname" . }}
                porter.run/sync-rollout: "true"
            spec:
              containers:
              - name: rollout-sync
                image: ghcr.io/porter-dev/rollout-sync:latest
                resources:
                  requests:
                    cpu: 50m
                    memory: 100Mi
                command: [sh, -c]
                args:
                {{- if and (.Values.deploymentStrategy.blueGreen)  (.Values.deploymentStrategy.blueGreen.group) }}
                - rollout sync --strategy blue-green
                {{- else if and (.Values.deploymentStrategy.blueGreen)  (.Values.deploymentStrategy.blueGreen.partnerApps) }}
                - rollout sync --strategy blue-green --blue-green-apps {{ range $index, $app := .Values.deploymentStrategy.blueGreen.partnerApps }}{{ if $index }},{{ end }}{{ $app }}{{ end }}
                {{- else }}
                - rollout sync --strategy blue-green --blue-green-apps {{ include "docker-template.fullname" . }}
                {{- end }}
              restartPolicy: Never
          backoffLimit: 0
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "docker-template.fullname" . }}-ar
  labels:
    porter.run/sync-rollout: "true"
    {{- include "docker-template.labels" . | nindent 4 }}
    {{- if .Values.labels }}
    {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    porter.run/sync-rollout: "true"
    porter.run/app-name: {{ .Release.Name }}
    porter.run/service-name: {{ include "docker-template.fullname" . }}
{{- end }}
