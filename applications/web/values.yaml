# Default values for docker-template.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

auto_deploy: true

replicaCount: 1

topology: 
  enabled: false
  maxSkew:
  topologyKey:
  whenUnsatisfiable:
  labelSelector: 
    enabled: false
    matchLabels: {}

terminationGracePeriodSeconds: 30

image:
  repository: public.ecr.aws/o1j4x7p4/hello-porter
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  port: 80

statefulset:
  enabled: false

ingress:
  enabled: true
  hosts: []
  porter_hosts: []
  provider: aws
  custom_domain: false
  custom_paths: []
  rewriteCustomPathsEnabled: true
  annotations: {}
  wildcard: false
  tls: true
  useDefaultIngressTLSSecret: false

albIngress:
  enabled: false
  hosts: []
  certificate_arn:
  custom_paths: []
  group_name:
  target_type: ip
  scheme: internet-facing
  security_groups:
  healthcheck_path:
  healthcheck_interval_seconds:
  healthcheck_timeout_seconds:
  healthcheck_success_codes:
  healthcheck_healthy_threshold_count:
  healthcheck_unhealthy_threshold_count:
  healthcheck_port:
  healthcheck_protocol:

privateIngress:
  enabled: false
  privateIngressClass:
  hosts: []
  custom_paths: []
  annotations: {}
  tls: false
  # secretName: my-existing-secret

container:
  port: 80
  command:
  args:
  env:
    normal:
  lifecycle:
    postStart:
    preStop:

resources:
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
  targetMemoryUtilizationPercentage: 50

keda:
  enabled: false
  pollingInterval: 30
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 10
  fallback:
    failureThreshold: 3
    failureReplicas: 6
  hpa:
    scaleUp:
      stabilizationWindowSeconds: 300
      policy:
        type: Percent
        value: 10
        periodSeconds: 300
    scaleDown:
      stabilizationWindowSeconds: 300
      policy:
        type: Percent
        value: 10
        periodSeconds: 300
  trigger:
    prometheus:
      enabled: false
      metricName: ""
      metricQuery: ""
      metricThreshold: ""
    datadog:
      enabled: false
      apiKey: ""
      appKey: ""
      datadogSite: "datadoghq.com"
      query: ""
      queryValue: ""
      activationQueryValue: ""
      age: ""
      metricUnavailableValue: ""

health:
  livenessProbe:
    enabled: false
    path: "/livez"
    scheme: "HTTP"
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
    auth:
      enabled: false
      username: ""
      password: ""

  livenessCommand:
    enabled: false
    command: "ls -l"
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

  readinessProbe:
    enabled: false
    path: "/readyz"
    scheme: "HTTP"
    initialDelaySeconds: 0
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
    auth:
      enabled: false
      username: ""
      password: ""

  startupProbe:
    enabled: false
    path: "/startupz"
    scheme: "HTTP"
    failureThreshold: 3
    periodSeconds: 5
    timeoutSeconds: 1
    auth:
      enabled: false
      username: ""
      password: ""

pvc:
  enabled: false
  storage: 20Gi
  mountPath: /mypath
  existingVolume: ""

cloudsql:
  enabled: false
  connectionName: ""
  dbPort: 5432
  serviceAccountJSON: ""
  additionalConnection:
    enabled: false
    dbPort: 5432
    connectionName: ""

datadog:
  enabled: false

nodeSelector: {}

tolerations: []

bluegreen:
  enabled: false

  # if this is set to true, the main deployment won't render and the service selector will use the
  # activeImageTag. For zero-downtime updates, set this to false until the new deployments are created,
  # and then set this to true.
  disablePrimaryDeployment: false

  # if bluegreen is enabled, set the activeImageTag and the list of imageTags
  # activeImageTag: mytag1
  imageTags: []
  # imageTags:
  # - mytag1
  # - mytag2

customNodePort:
  enabled: false
  port: 30000

stack:
  enabled: false
  name: ""
  revision: 0

emptyDir:
  enabled: false
  mountPath: /mypath