# Default values for docker-template.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

auto_deploy: true

replicaCount: 1

terminationGracePeriodSeconds: 30
allowConcurrency: true

image:
  repository: public.ecr.aws/o1j4x7p4/hello-porter-job
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest
  # A single imagePullSecret that will be injected into the deployment; only use in extreme cases, else it must be left blank. 
  imagePullSecret:

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

container:
  port: 80
  command: ""
  args: []
  env:
    normal:

schedule:
  enabled: false
  value: "*/5 * * * *"
  successfulHistory: 20
  failedHistory: 20

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  setCPULimits: false
  limits: {}

paused: false

cloudsql:
  enabled: false
  connections: []
    # - name: "abcdedfg"
    #   port: 34343
  connectionName: "" # deprecated, keeping for backwards compatibility. use connections instead.
  dbPort: 5432
  serviceAccountJSON: ""
  serviceAccountJSONSecret: ""
  additionalConnection: # deprecated, keeping for backwards compatibility. use connections instead. 
    enabled: false
    dbPort: 5432
    connectionName: ""

# Set this for enabling DNS extensions over TCP
# We enable this by default.
enableEDNS0: true

sidecar:
  signalChildProcesses: true
  # The timeout value in seconds for the job run
  timeout: 3600
  resources:
    requests:
      cpu: 10m
      memory: 100Mi

# Set this to add entries to the /etc/hosts file
# Format: hostAliases: [{ip: <IP>, hostnames: [<HOSTNAME>,..]},..]
hostAliases: []

retainFailedHooks: false
nodeSelector: {}
tolerations: []

stack:
  enabled: false
  name: ""
  revision: 0

podLabels: {}

priorityClassName: ""

nodeGroups: []

# set this to mount files from a secret into the container at /etc/secrets/<mountPath>
# Format: fileSecretMounts: [{secretName: <SECRET_NAME>, mountPath: <MOUNT_PATH>},..]
fileSecretMounts:
  enabled: false
  mounts: []

# Host volume mounts for mounting host directories into containers
# Format: hostVolumeMounts: [{name: <NAME>, hostPath: <HOST_PATH>, mountPath: <CONTAINER_PATH>, type: <HOSTPATH_TYPE>},..]
hostVolumeMounts:
  enabled: false
  volumes: []
  # Example:
  # volumes:
  #   - name: nvme-storage
  #     hostPath: /mnt/nvme-shared
  #     mountPath: /tmp/nvme
  #     type: DirectoryOrCreate
  #   - name: docker-socket
  #     hostPath: /var/run/docker.sock
  #     mountPath: /var/run/docker.sock
  #     type: Socket

# hostIPC is required on pods that need to access the host's IPC namespace
# this is the case for instance for pods that need to use the MPS sliced GPUs
# enable this conservatively
enableHostIpc: false

pvc:
  enabled: false
  storage: 20Gi
  mountPath: /mypath
  existingVolume: ""

multiplePvc:
  enabled: false
  volumes:
    - name: ""
      storage: 20Gi
      mountPath: /mypath
      existingVolume: ""

# job timeout configuration
activeDeadlineSeconds: # Optional - if not set, will use sidecar.timeout