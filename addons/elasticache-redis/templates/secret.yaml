---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: "{{ .Values.config.name }}.1"
  namespace: porter-env-group
  labels:
    porter.run/environment-group-name: "{{ .Values.config.name }}"
    porter.run/environment-group-version: "1"
    porter.run/environment-group-datastore: "{{ .Values.config.name }}"
    porter.run/environment-group-datastore-type: redis
    porter.run/managed: "true"
    porter.run/helm-release-name: "{{ .Release.Name }}"
data:
  REDIS_PASS: "{{- include "random_pw_reusable" . | b64enc }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Values.config.name }}.1"
  namespace: porter-env-group
  labels:
    porter.run/environment-group-name: "{{ .Values.config.name }}"
    porter.run/environment-group-version: "1"
    porter.run/environment-group-datastore: "{{ .Values.config.name }}"
    porter.run/environment-group-datastore-type: redis
    porter.run/managed: "true"
    porter.run/helm-release-name: "{{ .Release.Name }}"
---
apiVersion: services.k8s.aws/v1alpha1
kind: FieldExport
metadata:
  name: "{{ .Values.config.name }}-host"
  namespace: "{{ .Release.Namespace }}"
  labels:
    porter.run/helm-release-name: "{{ .Release.Name }}"
spec:
  to:
    name: "{{ .Values.config.name }}.1"
    namespace: porter-env-group
    key: REDIS_HOST
    kind: configmap
  from:
    path: ".status.nodeGroups[0].primaryEndpoint.address"
    resource:
      group: elasticache.services.k8s.aws
      kind: ReplicationGroup
      name: "{{ .Values.config.name }}"
---
apiVersion: services.k8s.aws/v1alpha1
kind: FieldExport
metadata:
  name: "{{ .Values.config.name }}-port"
  namespace: "{{ .Release.Namespace }}"
  labels:
    porter.run/helm-release-name: "{{ .Release.Name }}"
spec:
  to:
    name: "{{ .Values.config.name }}.1"
    namespace: porter-env-group
    key: REDIS_PORT
    kind: configmap
  from:
    path: ".status.nodeGroups[0].primaryEndpoint.port"
    resource:
      group: elasticache.services.k8s.aws
      kind: ReplicationGroup
      name: "{{ .Values.config.name }}"
