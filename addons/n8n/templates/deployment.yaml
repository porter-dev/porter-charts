apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "docker-template.fullname" . }}
  labels:
    {{- include "docker-template.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "docker-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "docker-template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "docker-template.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.container.port }}
              protocol: TCP
          env:
            # Porter default environment variables
            - name: PORTER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PORTER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PORTER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PORTER_POD_IMAGE_TAG
              value: "{{ .Values.image.tag }}"
            - name: N8N_LISTEN_ADDRESS
              value: "0.0.0.0"
            - name: N8N_PORT
              value: "5678"
            {{- range $key, $val := .Values.container.env.normal }}
            - name: {{ $key }}
            {{- $splVal := split "_" $val -}}
            {{- if and (len $splVal | eq 2) (eq $splVal._0 "PORTERSECRET") }}
              valueFrom:
                secretKeyRef:
                  name: {{ $splVal._1 }}
                  key: {{ $key }}
            {{- else }}
              value: {{ quote $val }}
            {{- end }}
            {{- end }}
          {{ if .Values.pvc.enabled }}
          volumeMounts:
            - name: "{{ include "docker-template.fullname" . }}-storage"
              mountPath: {{ .Values.pvc.mountPath }}
          {{ end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if .Values.pvc.enabled }}
      volumes:
        - name: "{{ include "docker-template.fullname" . }}-storage"
          persistentVolumeClaim:
        {{ if not (eq .Values.pvc.existingVolume "")}}
            claimName: {{ .Values.pvc.existingVolume }}
        {{ else }}
            claimName: "{{ include "docker-template.fullname" . }}-pvc"
        {{ end }}
      {{ end }}
